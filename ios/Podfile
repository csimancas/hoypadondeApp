# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
end

use_modular_headers!

target 'hoypadonde' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # ConfiguraciÃ³n de Firebase
  pod 'Firebase/CoreOnly', '11.5.0', :modular_headers => true
  pod 'Firebase/Analytics', '11.5.0', :modular_headers => true
  pod 'Firebase/Firestore', '11.5.0', :modular_headers => true

  target 'hoypadondeTests' do
    inherit! :complete
    # Pods para pruebas
  end

  post_install do |installer|
    # SoluciÃ³n para problemas de compatibilidad de arquitecturas (simulador)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      end
    end

    # Ajustes post instalaciÃ³n
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
  end
end
